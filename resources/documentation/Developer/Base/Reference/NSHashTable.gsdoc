<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSHashTable" up="Base">
  <head>
    <title>NSHashTable class reference</title>
    <author name="Richard Frith-Macdonald">
      <email address="rfm@gnu.org">
        rfm@gnu.org
      </email>
    </author>
    <date>Generated at 2023-12-20 19:35:39 -0500</date>
    <copy>2009 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSHashTable class
      </heading>
      <class name="NSHashTable" super="NSObject" ovadd="1.0.0">
        <declared>Foundation/NSHashTable.h</declared>
        <conform>NSCopying</conform>
        <conform>NSCoding</conform>
        <conform>NSFastEnumeration</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>hashTableWithOptions:</sel>
          <arg type="NSPointerFunctionsOptions">options</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>hashTableWithWeakObjects</sel>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>weakObjectsHashTable</sel>
          <desc>
            Creates a hash table that uses zeroing weak
            references (either using the automatic reference
            counting or garbage collection mechanism,
            depending on which mode this framework is
            compiled in) so that objects are removed when
            their last other reference disappears.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>addObject:</sel>
          <arg type="GS_GENERIC_TYPE(ElementT)">object</arg>
          <desc>
            Adds the <var>object</var> to the receiver.
          </desc>
        </method>
        <method type="GS_GENERIC_CLASS(NSArray,ElementT)*" ovadd="1.0.0">
          <sel>allObjects</sel>
          <desc>
            Returns an array containing all objects in the
            receiver.
          </desc>
        </method>
        <method type="GS_GENERIC_TYPE(ElementT)" ovadd="1.0.0">
          <sel>anyObject</sel>
          <desc>
            Returns any objct from the receiver, or
            <code>nil</code> if the receiver contains no
            objects.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>containsObject:</sel>
          <arg type="GS_GENERIC_TYPE(ElementT)">anObject</arg>
          <desc>
            Returns <code>YES</code> if the receiver contains
            an item equal to <var>anObject</var>, or <code>NO</code>
            otherwise.
          </desc>
        </method>
        <method type="NSUInteger" ovadd="1.0.0">
          <sel>count</sel>
          <desc>
            Return the number of items atored in the receiver.
          </desc>
        </method>
        <method type="instancetype" ovadd="1.0.0">
          <sel>initWithOptions:</sel>
          <arg type="NSPointerFunctionsOptions">options</arg>
          <sel>capacity:</sel>
          <arg type="NSUInteger">initialCapacity</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="instancetype" ovadd="1.0.0">
          <sel>initWithPointerFunctions:</sel>
          <arg type="NSPointerFunctions*">functions</arg>
          <sel>capacity:</sel>
          <arg type="NSUInteger">initialCapacity</arg>
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>intersectHashTable:</sel>
          <arg type="GS_GENERIC_CLASS(NSHashTable,ElementT)*">other</arg>
          <desc>
            Removes from the receiver any items which are not
            also present in 'other'.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>intersectsHashTable:</sel>
          <arg type="GS_GENERIC_CLASS(NSHashTable,ElementT)*">other</arg>
          <desc>
            Returns <code>YES</code> if the receiver and
            'other' contain any items in common.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isEqualToHashTable:</sel>
          <arg type="GS_GENERIC_CLASS(NSHashTable,ElementT)*">other</arg>
          <desc>
            Returns <code>YES</code> if the receiver and
            'other' contain equal sets of items.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isSubsetOfHashTable:</sel>
          <arg type="GS_GENERIC_CLASS(NSHashTable,ElementT)*">other</arg>
          <desc>
            Returns <code>YES</code> fi all the items in the
            receiver are also present in 'other'
          </desc>
        </method>
        <method type="GS_GENERIC_TYPE(ElementT)" ovadd="1.0.0">
          <sel>member:</sel>
          <arg type="GS_GENERIC_TYPE(ElementT)">object</arg>
          <desc>
            Returns an item stored in the receiver which is
            equal to the supplied <var>object</var> argument, or
            <code>nil</code> if no matchi is found.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>minusHashTable:</sel>
          <arg type="GS_GENERIC_CLASS(NSHashTable,ElementT)*">other</arg>
          <desc>
            Removes from the receivr all those items which are
            prsent in both the receiver and in 'other'.
          </desc>
        </method>
        <method type="GS_GENERIC_CLASS(NSEnumerator,ElementT)*" ovadd="1.0.0">
          <sel>objectEnumerator</sel>
          <desc>
            Return an enumerator for the receiver.
          </desc>
        </method>
        <method type="NSPointerFunctions*" ovadd="1.0.0">
          <sel>pointerFunctions</sel>
          <desc>
            Return an NSPointerFunctions value describing the
            functions used by the receiver to handle its
            contents.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeAllObjects</sel>
          <desc>
            Removes all objects.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeObject:</sel>
          <arg type="GS_GENERIC_TYPE(ElementT)">object</arg>
          <desc>
            Remove the <var>object</var> (or any equal
            <var>object</var>) from the receiver.
          </desc>
        </method>
        <method type="GS_GENERIC_CLASS(NSSet,ElementT)*" ovadd="1.0.0">
          <sel>setRepresentation</sel>
          <desc>
            Returns a set containing all the objects in the
            receiver.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>unionHashTable:</sel>
          <arg type="GS_GENERIC_CLASS(NSHashTable,ElementT)*">other</arg>
          <desc>
            Adds to the receiver thse items present in 'other'
            which were not present in the receiver.
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>

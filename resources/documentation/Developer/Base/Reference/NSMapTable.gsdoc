<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="NSMapTable" up="Base">
  <head>
    <title>NSMapTable class reference</title>
    <author name="Richard Frith-Macdonald">
      <email address="rfm@gnu.org">
        rfm@gnu.org
      </email>
    </author>
    <date>Generated at 2023-12-20 19:35:39 -0500</date>
    <copy>2009 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the NSMapTable class
      </heading>
      <class name="NSMapTable" super="NSObject" ovadd="1.0.0">
        <declared>Foundation/NSMapTable.h</declared>
        <conform>NSCopying</conform>
        <conform>NSCoding</conform>
        <conform>NSFastEnumeration</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>mapTableWithKeyOptions:</sel>
          <arg type="NSPointerFunctionsOptions">keyOptions</arg>
          <sel>valueOptions:</sel>
          <arg type="NSPointerFunctionsOptions">valueOptions</arg>
          <desc>
            Return a map table initialised using the specified
            options for keys and values.
          </desc>
        </method>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>mapTableWithStrongToStrongObjects</sel>
          <desc>
            Convenience method for creating a map table to
            store object values using object keys.
          </desc>
        </method>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>mapTableWithStrongToWeakObjects</sel>
          <desc>
            Convenience method for creating a map table to
            store non-retained object values with retained object
            keys.
          </desc>
        </method>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>mapTableWithWeakToStrongObjects</sel>
          <desc>
            Convenience method for creating a map table to
            store retained object values with non-retained object
            keys.
          </desc>
        </method>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>mapTableWithWeakToWeakObjects</sel>
          <desc>
            Convenience method for creating a map table to
            store non-retained object values with non-retained
            object keys.
          </desc>
        </method>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>strongToStrongObjectsMapTable</sel>
          <desc>
            Convenience method for creating a map table to
            store object values using object keys. The collection
            will retain both the key and the value.
          </desc>
        </method>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>strongToWeakObjectsMapTable</sel>
          <desc>
            Convenience method for creating a map table to
            store object values using object keys. The collection
            will retain the key, the value will be a zeroing weak
            reference.
          </desc>
        </method>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>weakToStrongObjectsMapTable</sel>
          <desc>
            Convenience method for creating a map table to
            store object values using object keys. The collection
            will retain the value, the key will be a zeroing weak
            reference.
          </desc>
        </method>
        <method type="instancetype" factory="yes" ovadd="1.0.0">
          <sel>weakToWeakObjectsMapTable</sel>
          <desc>
            Convenience method for creating a map table to
            store object values using object keys. The collection
            will use zeroing weak references for both the key and
            the value.
          </desc>
        </method>
        <method type="NSUInteger" ovadd="1.0.0">
          <sel>count</sel>
          <desc>
            Return the number of items stored in the map.
          </desc>
        </method>
        <method type="NSDictionary*" ovadd="1.0.0">
          <sel>dictionaryRepresentation</sel>
          <desc>
            Return a dictionary containing the keys and values
            in the receiver.
          </desc>
        </method>
        <method type="instancetype" ovadd="1.0.0">
          <sel>initWithKeyOptions:</sel>
          <arg type="NSPointerFunctionsOptions">keyOptions</arg>
          <sel>valueOptions:</sel>
          <arg type="NSPointerFunctionsOptions">valueOptions</arg>
          <sel>capacity:</sel>
          <arg type="NSUInteger">initialCapacity</arg>
          <desc>
            Initialiser using option bitmasks to describe
            the keys and values.
          </desc>
        </method>
        <method type="instancetype" ovadd="1.0.0">
          <sel>initWithKeyPointerFunctions:</sel>
          <arg type="NSPointerFunctions*">keyFunctions</arg>
          <sel>valuePointerFunctions:</sel>
          <arg type="NSPointerFunctions*">valueFunctions</arg>
          <sel>capacity:</sel>
          <arg type="NSUInteger">initialCapacity</arg>
          <desc>
            Initialiser using full pointer function
            information to describe the keys and values.
          </desc>
        </method>
        <method type="GS_GENERIC_CLASS(NSEnumerator,KeyT)*" ovadd="1.0.0">
          <sel>keyEnumerator</sel>
          <desc>
            Return an enumerator able to enumerate the keys in
            the receiver.
          </desc>
        </method>
        <method type="NSPointerFunctions*" ovadd="1.0.0">
          <sel>keyPointerFunctions</sel>
          <desc>
            Return an NSPointerFunctions value describind the
            functions used by the receiver to handle keys.
          </desc>
        </method>
        <method type="GS_GENERIC_CLASS(NSEnumerator,ValT)*" ovadd="1.0.0">
          <sel>objectEnumerator</sel>
          <desc>
            Return an enumerator able to enumerate the values in
            the receiver.
          </desc>
        </method>
        <method type="GS_GENERIC_TYPE(ValT)" ovadd="1.0.0">
          <sel>objectForKey:</sel>
          <arg type="GS_GENERIC_TYPE(KeyT)">aKey</arg>
          <desc>
            Return the object stored under the specified key.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeAllObjects</sel>
          <desc>
            Empty the receiver of all stored values.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>removeObjectForKey:</sel>
          <arg type="GS_GENERIC_TYPE(KeyT)">aKey</arg>
          <desc>
            Remove the object stored under the specified key.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setObject:</sel>
          <arg type="GS_GENERIC_TYPE(ValT)">anObject</arg>
          <sel>forKey:</sel>
          <arg type="GS_GENERIC_TYPE(KeyT)">aKey</arg>
          <desc>
            Store the object under the specified key, replacing
            any object which was previously stored under that key.
          </desc>
        </method>
        <method type="NSPointerFunctions*" ovadd="1.0.0">
          <sel>valuePointerFunctions</sel>
          <desc>
            Return an NSPointerFunctions value describind the
            functions used by the receiver to handle values.
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>

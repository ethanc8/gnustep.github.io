<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="GSTable" up="GuiAdditions">
  <head>
    <title>GSTable class documentation</title>
    <author name="Nicola Pero">
      <email address="n.pero@mi.flashnet.it">
        n.pero@mi.flashnet.it
      </email>
    </author>
    <date>Generated at 2023-12-22 15:07:59 -0500</date>
    <abstract>The GSTable class (a GNU extension)</abstract>
    <copy>1999 Free Software Foundation, Inc.</copy>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the GSTable class
      </heading>
      <class name="GSTable" super="NSView" ovadd="1.0.0">
        <declared>GNUstepGUI/GSTable.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="float*" name="_columnDimension" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="float*" name="_columnXOrigin" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL*" name="_expandColumn" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL*" name="_expandRow" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="int" name="_expandingColumnNumber" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="int" name="_expandingRowNumber" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="BOOL*" name="_havePrisoner" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSView**" name="_jails" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="float" name="_maxXBorder" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="float" name="_maxYBorder" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="float*" name="_minColumnDimension" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="float*" name="_minRowDimension" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="float" name="_minXBorder" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="float" name="_minYBorder" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="NSSize" name="_minimumSize" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="int" name="_numberOfColumns" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="int" name="_numberOfRows" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="float*" name="_rowDimension" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <ivariable type="float*" name="_rowYOrigin" validity="protected" ovadd="1.0.0">
          <desc>
            <em>Warning</em> the underscore at the start of the
            name of this instance variable indicates that, even
            though it is not technically <em>private</em>, it is
            intended for internal use within the package, and
            you should not use the variable in other code.
          </desc>
        </ivariable>
        <method type="void" ovadd="1.0.0">
          <sel>addColumn</sel>
          <desc>
            Add a column to the GSTable. The column is added
            <strong>void</strong>, with zero width and X
            Resizing enabled.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>addRow</sel>
          <desc>
            Add a row to the GSTable. The row is added
            <strong>void</strong>, with zero height and Y
            Resizing enabled.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>init</sel>
          <desc>
            Initialize with a default of 2 columns and 2
            rows.
          </desc>
        </method>
        <method type="id" ovadd="1.0.0">
          <sel>initWithNumberOfRows:</sel>
          <arg type="int">rows</arg>
          <sel>numberOfColumns:</sel>
          <arg type="int">columns</arg>
          <desc>
            Initialize a GSTable with <var>columns</var>
            <var>columns</var> and <var>rows</var>
            <var>rows</var>. If <var>columns</var> or
            <var>rows</var> is negative or null, a warning is
            issued and a default of 2 is used instead.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isXResizingEnabledForColumn:</sel>
          <arg type="int">aColumn</arg>
          <desc>
            Return whether X resizing is enabled for the column
            <var>aColumn</var>.
          </desc>
        </method>
        <method type="BOOL" ovadd="1.0.0">
          <sel>isYResizingEnabledForRow:</sel>
          <arg type="int">aRow</arg>
          <desc>
            Return whether Y resizing is enabled for the row
            <var>aRow</var>.
          </desc>
        </method>
        <method type="NSSize" ovadd="1.0.0">
          <sel>minimumSize</sel>
          <desc>
            This returns the minimum size the GSTable should be
            resized to. Trying to resize the GSTable below this
            size will only result in clipping (ie, making it
            disappear) part of the GSTable.
          </desc>
        </method>
        <method type="int" ovadd="1.0.0">
          <sel>numberOfColumns</sel>
          <desc>
            Return the number of columns in the GSTable.
          </desc>
        </method>
        <method type="int" ovadd="1.0.0">
          <sel>numberOfRows</sel>
          <desc>
            Return the number of rows in the GSTable.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>putView:</sel>
          <arg type="NSView*">aView</arg>
          <sel>atRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <desc>
            Put <var>aView</var> in the GSTable, in the specified
            <var>row</var> and <var>column</var>. Zero (0)
            margins are used. If the <var>column</var>
            <var>column</var> (or the <var>row</var>
            <var>row</var>}) is not enough big to fully display
            <var>aView</var> and its margins, the
            <var>column</var> (or the <var>row</var>) is resized
            (regardless of the fact that X or Y Resizing is
            Enabled or not). It is understood that this will
            affect each view (and its margins) in the
            <var>column</var> (or <var>row</var>) according to
            the autoresizing mask of each view.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>putView:</sel>
          <arg type="NSView*">aView</arg>
          <sel>atRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <sel>withMargins:</sel>
          <arg type="float">margins</arg>
          <desc>
            Put <var>aView</var> in the GSTable, using
            <var>margins</var> as margin in all directions: left,
            right, top, bottom.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>putView:</sel>
          <arg type="NSView*">aView</arg>
          <sel>atRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <sel>withMinXMargin:</sel>
          <arg type="float">minXMargin</arg>
          <sel>maxXMargin:</sel>
          <arg type="float">maxXMargin</arg>
          <sel>minYMargin:</sel>
          <arg type="float">minYMargin</arg>
          <sel>maxYMargin:</sel>
          <arg type="float">maxYMargin</arg>
          <desc>
            <p>
              Put <var>aView</var> in the GSTable, using the
              specified margins. The names for the margins
              are chosen as to be as close as possible to the
              autoresizingMask convention. The margins
              are to be interpreted as follows:
            </p>
            <deflist>
              <term><var>minXMargin</var></term>
              <desc>Left Margin</desc>
              <term><var>maxXMargin</var></term>
              <desc>Right Margin</desc>
              <term><var>minYMargin</var></term>
              <desc>
                Lower Margin (Upper if view is flipped)
              </desc>
              <term><var>maxYMargin</var></term>
              <desc>
                Upper Margin (Lower if view is flipped)
              </desc>
            </deflist>
            <p>
              Each view which is added to the GSTable can have
              some margins set. The GSTable treats the view and
              its margins as a whole. They are given (as a whole)
              some space, which is reduced or increased (but only
              if X or Y Resizing is Enabled for the
              <var>column</var> or the <var>row</var> in which
              the view resides) when the GSTable is resized. When
              this happens, the space is added (or subtracted) to
              the view or to the margins according to the
              autoResizeMask of the view.
            </p>
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>putView:</sel>
          <arg type="NSView*">aView</arg>
          <sel>atRow:</sel>
          <arg type="int">row</arg>
          <sel>column:</sel>
          <arg type="int">column</arg>
          <sel>withXMargins:</sel>
          <arg type="float">xMargins</arg>
          <sel>yMargins:</sel>
          <arg type="float">yMargins</arg>
          <desc>
            Put <var>aView</var> in the GSTable, using
            <var>xMargins</var> as the left and right margins,
            and <var>yMargins</var> as the top and bottom margins.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setBorder:</sel>
          <arg type="float">aBorder</arg>
          <desc>
            Set the GSTable up, bottom, left and right borders to
            the same value <var>aBorder</var>. The GSTable is
            immediately updated. If <var>aBorder</var> is
            negative, the border is reset to the default,
            which is zero (0). The border is simply unfilled
            space; it is measured in the GSTable coordinate
            system.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMaxXBorder:</sel>
          <arg type="float">aBorder</arg>
          <desc>
            Same as setXBorder: but set only the right border.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMaxYBorder:</sel>
          <arg type="float">aBorder</arg>
          <desc>
            Same as setXBorder: but set only the upper border
            (lower if the GSTable is flipped).
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMinXBorder:</sel>
          <arg type="float">aBorder</arg>
          <desc>
            Same as setXBorder: but set only the left border.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setMinYBorder:</sel>
          <arg type="float">aBorder</arg>
          <desc>
            Same as setXBorder: but set only the lower border
            (upper if the GSTable is flipped).
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setXBorder:</sel>
          <arg type="float">aBorder</arg>
          <desc>
            Set the GSTable left and right borders to
            <var>aBorder</var>. If <var>aBorder</var> is
            negative, the border is reset to zero. The
            GSTable is immediately updated.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setXResizingEnabled:</sel>
          <arg type="BOOL">aFlag</arg>
          <sel>forColumn:</sel>
          <arg type="int">aColumn</arg>
          <desc>
            Enable/disable X Resizing for the column
            <var>aColumn</var>} according to <var>aFlag</var>.
            Note: at present, enabling/disabling X resizing after
            the table has been put in the view hierarchy is not
            supported.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setYBorder:</sel>
          <arg type="float">aBorder</arg>
          <desc>
            Same as setXBorder: but set the up and bottom borders.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>setYResizingEnabled:</sel>
          <arg type="BOOL">aFlag</arg>
          <sel>forRow:</sel>
          <arg type="int">aRow</arg>
          <desc>
            Enable/disable Y Resizing for the row
            <var>aRow</var> according to <var>aFlag</var>. Note:
            at present, enabling/disabling Y resizing after the
            table has been put in the view hierarchy is not
            supported.
          </desc>
        </method>
        <method type="void" ovadd="1.0.0">
          <sel>sizeToFit</sel>
          <desc>
            If for any reason you need the GSTable to be redrawn
            (with minimum size), invoke the following.
          </desc>
        </method>
      </class>
    </chapter>
  </body>
</gsdoc>
